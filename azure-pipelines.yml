variables:
   serviceConnectionToAzure: rajk1000connection
   appName: rajk-funct

trigger:
- master
stages:
- stage: BuildStage
  jobs:
  - job: myjob
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: SonarQubePrepare@4
      inputs:
       SonarQube: 'sonarqube'
       scannerMode: 'Other'
    - task: Maven@3
      inputs:
       mavenPomFile: 'pom.xml'
       publishJUnitResults: true
       testResultsFiles: '**/surefire-reports/TEST-*.xml'
       codeCoverageToolOption: 'JaCoCo'
       javaHomeOption: 'JDKVersion'
       jdkVersionOption: '1.8'
       mavenVersionOption: 'Default'
       mavenOptions: '-Xmx3072m'
       mavenAuthenticateFeed: false
       effectivePomSkip: false
       sonarQubeRunAnalysis: true
       sqMavenPluginVersionChoice: 'latest'

    - task: CopyFiles@2
      displayName: Copy Files
      inputs:
       SourceFolder: $(system.defaultworkingdirectory)/target/azure-functions/
       Contents: '**'
       TargetFolder: $(build.artifactstagingdirectory)   

    - task: PublishBuildArtifacts@1
      displayName: Publish Artifact
      inputs:
       PathtoPublish: $(build.artifactstagingdirectory)    
    

- stage: DeployToCI
  jobs:
  - job: deployJob
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: AzureResourceGroupDeployment@2
      inputs:
       azureSubscription: $(serviceConnectionToAzure)
       action: 'Create Or Update Resource Group'
       resourceGroupName: 'raj1-ci'
       location: 'UK South'
       templateLocation: 'Linked artifact'
       csmFile: 'templates/create-function-arm.json'
       overrideParameters: '-appName $(appName)-ci'
       deploymentMode: 'Incremental'
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'specific'
        project: '3b365fab-c3bb-43d3-ab19-9964770c86b9'
        definition: '9'
        buildVersionToDownload: 'latest'
        targetPath: '$(Pipeline.Workspace)'
    - task: AzureFunctionApp@1
      displayName: Azure Function App deploy
      inputs:
        azureSubscription: '$(serviceConnectionToAzure)'
        appType: 'functionApp'
        appName: '$(appName)-ci'
        package: '$(Pipeline.Workspace)/drop/javafunctions'
        deploymentMethod: 'auto'

  - job: serverjob
    pool: server
    dependsOn: deployjob
    steps:
    - task: AzureFunction@1
      inputs:
        function: 'https://$(appName)-ci.azurewebsites.net/api/HttpTrigger-Java'
        key: 'ZcEh2VajFv3aYFEGJGrCqNjJsgeSC5SJnT0xUC6cf75a0hpCxVT5UQ=='
        method: 'GET'
        queryParameters: 'name=World'
        waitForCompletion: 'false'

- stage: DeployToQA
  jobs:
  - job: deployQA
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: AzureResourceGroupDeployment@2
      inputs:
       azureSubscription: $(serviceConnectionToAzure)
       action: 'Create Or Update Resource Group'
       resourceGroupName: 'raj1-qa'
       location: 'UK South'
       templateLocation: 'Linked artifact'
       csmFile: 'templates/create-function-arm.json'
       overrideParameters: '-appName $(appName)-qa'
       deploymentMode: 'Incremental'
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'specific'
        project: '3b365fab-c3bb-43d3-ab19-9964770c86b9'
        definition: '9'
        buildVersionToDownload: 'latest'
        targetPath: '$(Pipeline.Workspace)'
    - task: AzureFunctionApp@1
      displayName: Azure Function App deploy
      inputs:
        azureSubscription: '$(serviceConnectionToAzure)'
        appType: 'functionApp'
        appName: '$(appName)-qa'
        package: '$(Pipeline.Workspace)/drop/javafunctions'
        deploymentMethod: 'auto'

  - job: serverjob
    pool: server
    dependsOn: deployQA
    steps:
    - task: AzureFunction@1
      inputs:
        function: 'https://$(appName)-qa.azurewebsites.net/api/HttpTrigger-Java'
        key: 'ZcEh2VajFv3aYFEGJGrCqNjJsgeSC5SJnT0xUC6cf75a0hpCxVT5UQ=='
        method: 'GET'
        queryParameters: 'name=World'
        waitForCompletion: 'false'